apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 11
        versionName "1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    provided fileTree(dir: 'ref_libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

//打包运行app时会自动调用ndkBuild task
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn 'makeJar'
//}

//tasks.findByName("assembleDebug").doLast {
//    //删除存在的
//    delete "build/libs/GioneeWebAgent_${AGENT_VERSION}.jar"
//    //设置拷贝的文件
//    from('build/intermediates/bundles/release/')
//    //打进jar包后的文件目录
//    into('build/libs/')
//    //将classes.jar放入build/libs/目录下
//    //include ,exclude参数来设置过滤
//    //（我们只关心classes.jar这个文件）
//    include('classes.jar')
//    //重命名
//    rename ('classes.jar', "GioneeWebAgent_${AGENT_VERSION}.jar")
//}

//afterEvaluate {
//    tasks.matching {
//        it.name.startsWith('process') && (it.name.endsWith('ReleaseJavaRes')) ||
//                (it.name.endsWith('DebugJavaRes'))
//    }.each {
//        tk ->
//            tk.dependsOn(makeJar)
//    }
//}

//Copy类型
task makeJar(type: Copy) { // , dependsOn:'assembleDebug'
    //删除存在的
    delete "build/libs/BaseWebAgent_${AGENT_VERSION}.jar"
    //设置拷贝的文件
    from('build/intermediates/bundles/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar', "BaseWebAgent_${AGENT_VERSION}.jar")
}

makeJar.dependsOn(build)
